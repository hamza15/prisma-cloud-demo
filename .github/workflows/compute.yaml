name: Deploy & configure Cloud Compute

on:
  push:
    branches:
      - master
      - dev
    paths:
      - 'compute/**'
      - '.github/workflows/compute.yaml'

jobs:
  build:
    name: Setup
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: compute
    env:
      tf_actions_working_dir: compute
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # - name: Run Prisma Cloud 
      #   id: prisma-cloud
      #   uses: bridgecrewio/checkov-action@master
      #   env:
      #     PRISMA_API_URL: https://api.ca.prismacloud.io
      #   with:
      #     api-key: ${{ secrets.BC_API_KEY }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform init
        working-directory: ${{ env.tf_actions_working_dir }}
        run: terraform init

      - name: Validate Terraform files
        working-directory: ${{ env.tf_actions_working_dir }}
        run: |
          terraform validate

      - name: Terraform Plan
        working-directory: ${{ env.tf_actions_working_dir }}
        run: |
          terraform plan -out tfplan
          terraform show -json tfplan | jq '.' > tfplan.json

      # - name: Test with Checkov
      #   id: checkov
      #   uses: bridgecrewio/checkov-action@master
      #   with:
      #     directory: policies
      #     framework: terraform 

      - name: Install Checkov
        run: |
          pip3 install checkov

      - name: Run Checkov
        working-directory: ${{ env.tf_actions_working_dir }}
        run: |
          checkov -f tfplan.json --external-checks-dir ../policies


      # - name: Run Terraform & save state
      #   working-directory: ${{ env.tf_actions_working_dir }}
      #   run: |
      #     terraform plan
      #     terraform apply -auto-approve